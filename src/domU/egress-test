#!/bin/bash

[[ `whoami` == "root" ]] && echo "don't run as root" && exit 1;
  
RESET="\e[0m"
RED="\e[0;31m"
WHITE="\e[0;97m"


function __message() {
  local test_type="$1";
  local descrip="$2";
  local result="$3";
  local host="$4"

  if [[ "$result" == "response" ]]; then
    local message="Reply from ${host}"
  else
    local message="No reply from ${host}"
  fi
  
  if [[ "$test_type" == "blacklist" ]]; then
    [[ "$result" == "response" ]] && echo -e "\t${RED}FAILED${RESET}: (${WHITE}$descrip${RESET}) $message${RESET}";
  else
    [[ "$result" == "no-response" ]] && echo -e "\t${RED}FAILED${RESET}: (${WHITE}$descrip${RESET}) $message${RESET}";
  fi
}

function __ping() {
  local host="$1";
  local descrip="$2";
  local test_type="$3"

  ping -c 1 -w 3 -q "${host}" 2>&1 >/dev/null;
  
  [[ "$?" == "0" ]] && local result="response" || local result="no-response";
  
  __message "$test_type" "$descrip" "$result" "$host" 
}

function __curl() {
  local host="$1";
  local descrip="$2";
  local test_type="$3"
  curl --silent -X OPTIONS --connect-timeout 3 "$host" > /dev/null;
  
  (( $? == 0 )) && local result="response" || local result="no-response";
  
  __message "$test_type" "$descrip" "$result" "$host"
}

blacklist_ping_targets=(
  "China,mirrors.bfsu.edu.cn"
  "China,mirrors.ustc.edu.cn"
  "China,mirrors.tuna.tsinghua.edu.cn"
  "Japan,debian-mirror.sakura.ne.jp"
  "Russia,ftp.ru.debian.org"
  "LAN,10.0.0.2"
  "LAN,192.168.1.1"
  "LAN,172.16.1.1"
)

blacklist_curl_targets=(
  "Poland,https://ftp.icm.edu.pl/"
  "Russia,https://mirror.yandex.ru"
  "NZ,https://fedora-secondary.mirrors.theom.nz"
)

whitelist_curl_targets=(
  "USA,https://download-cc-rdu01.fedoraproject.org/"
  "Germany,https://www.hs-esslingen.de/"
  "Denmark,https://mirrors.dotsrc.org/"
  "Personal,https://duckduckgo.com"
  "Personal,https://reddit.com"
  "Personal,https://news.ycombinator.com"
  "Personal,https://youtube.co.uk"
  "Personal,https://youtube.com"
  "Personal,https://mozilla.org"
  "Personal,https://addons.mozilla.org"
)

function __do() {
  local test_mode="$1";
  local test_type="$2";
  local targets=${@:3};

  echo -e "${test_mode^} => ${WHITE}${test_type}ed${RESET} hosts.." \
  
  for host in ${targets[@]}; do
    IFS="," read -ra split <<< "$host";
    descrip="${split[0]}";
    host="${split[1]}";
    if [[ "$test_mode" == "ping" ]]; then
      __ping $host $descrip "$test_type"
    elif [[ "$test_mode" == "curl" ]]; then
      __curl $host $descrip "$test_type"
    else
      echo "unknown test mode '${test_mode}'";
      echo 2;
    fi
  done
}

case $1 in
  "curl")
    __do "curl" "blacklist" "${blacklist_curl_targets[*]}"
    __do "curl" "whitelist" "${whitelist_curl_targets[*]}"
  ;;
  "ping")
    __do "ping" "blacklist" "${blacklist_ping_targets[*]}"
  ;;
  *)
    __do "ping" "blacklist" "${blacklist_ping_targets[*]}"
    __do "curl" "blacklist" "${blacklist_curl_targets[*]}"
    __do "curl" "whitelist" "${whitelist_curl_targets[*]}"
esac

unset RED
unset WHITE
unset RESET
unset __do
unset __ping
unset __curl
unset __message
