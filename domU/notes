#!/bin/env bash
# requires: rsync, rclone, tar, sha1sum, qvm-copy;
#
# WARN: ise ${HOME} for paths, not ~/

NOTES_DIR="${HOME}/org"
NOTES_DIR_BACKUP="${HOME}/.backup/org"
NOTES_REMOTE_RCLONE="encrypted:/notes"

notesdir="$NOTES_DIR"
backupdir="$NOTES_DIR_BACKUP"
remote="$NOTES_REMOTE_RCLONE"
archive="${HOME}/notes.tar.gz"

[[ -z "$notesdir" ]] && echo "You must set NOTES_DIR" && exit 2
[[ -z "$remote" ]] && echo "You must set NOTES_REMOTE_RCLONE" && exit 2

function ifyes() {
  read -p "$1 [y/N]: " answer
  [[ "${answer^^}" == "Y" || "${answer^^}" == "YES" ]]
}

function doexport() {
  local send=false
  ifyes "Send to VM afterwards?" && local send=true

  echo "Exporting to '${archive}'.."
  tar -czf "$archive" "$lower" >/dev/null 2>&1 \
    && sha1sum "`basename $archive`" > "${archive}.sha1" \
    && $send \
    && qvm-copy "$archive" "${archive}.sha1"
}

function help() {
  cat <<EOF
Usage:
  `basename ${0}` OPTION

OPTION
  export, e       export archive to "${archive}"
  sync,   s       sync to remote, deleting remote files
                  when necessary
  sync,   p       pull notes (you should only do this once
                  on a fresh machine)

  help,   h       show this help menu

EOF
}

case "$1" in
  "sync"|"s")
    echo "Syncing '$notesdir' => '${remote}'..."
    mkdir -p "$backupdir"
    # the OneDrive (linux client) author states 4 max parallel for OneDrive:
    # https://askubuntu.com/a/1370774
    echo "Doing local backup: $notesdir => ${backupdir}..." \
      && rsync -rltq --delete "${notesdir}/" "$backupdir" \
      && echo "Syncing $backupdir => ${remote}..." \
      && rclone sync "$backupdir" "$remote" --verbose --transfers=4 \
      && echo "Remote backup OK"
    ;;
  "pull"|"p")
    if [[ -d "$notesdir" ]]; then
      echo "Notes already exists ($notesdir), not pulling"
      exit 1
    fi
    echo "Pulling '$remote' => '${notesdir}'..."
    rclone copy "$remote" "$notesdir" --verbose \
      && echo "Pulled OK"
    ;;
  "export"|"e")
    echo Not implemented
    exit 2
    doexport && echo "Export OK"
    ;;
  "help"|"h"|"-h"|"--help")
    help
    ;;
  *)
    echo -e "Unknown OPTION: '$1'\n"
    help
    ;;
esac
